## Listen for outgoing http calls: 
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
function addCalls() {
    const networkCalls = window.performance
        .getEntriesByType('resource')
        .map((entry) => entry.name);
        
        // Actual logic will go here!
        
    return networkCalls
}

async function main(ms) {
    await sleep(ms);
    const ary = addCalls()
    return ary
}
let collection = {} 
collection["a"] = await main(0)
collection["b"] = await main(10000)
for ( let k in collection ) { 
  console.log("THIS IS k=" + k ) 
  const obj = collection[k] 
  for ( let thing in obj ) { 
    console.log( thing + "   "  + obj[thing] ) 
  } 
} 
console.log("one")
console.log("two")
console.log("three")
console.log("four")
console.log("five")
console.log("six")
console.log("seven")
if ( collection['b'].length > 0 ) { 
console.error("b len is " + collection['b'].length ) 
  return true
} else { 
  return false
}
